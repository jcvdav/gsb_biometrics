"log10(f_w) ~ log10(f_hl)")) %>%
separate(formula, into = c("dep_var", "exp_var"), sep = "~", remove = F) %>%
mutate(model = map(.x = formula, .f = foo, data = gsb_data_filtered),
res_plot = map2(.x = model, .y = model_name, .f = res_plot))
length_models$res_plot
# Fit the models
length_models <- tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
separate(formula, into = c("dep_var", "exp_var"), sep = "~", remove = F) %>%
mutate(model = map(.x = formula, .f = foo, data = gsb_data_filtered),
res_plot = map2(.x = model, .y = model_name, .f = res_plot))
length_models$res_plot[]
length_models$res_plot[[]]
length_models$res_plot
ggplot(data = d, mapping = aes(x = residuasl)) +
geom_density()
# Function to plot the residuals
res_plot <- function(x, title) {
d <- tibble(residuals = x$residuals)
ggplot(data = d, mapping = aes(x = residuasl)) +
geom_density()
}
# Fit the models
length_models <- tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
separate(formula, into = c("dep_var", "exp_var"), sep = "~", remove = F) %>%
mutate(model = map(.x = formula, .f = foo, data = gsb_data_filtered),
res_plot = map2(.x = model, .y = model_name, .f = res_plot))
length_models$res_plot
ggplot(data = d, mapping = aes(x = residuals)) +
geom_density()
# Function to plot the residuals
res_plot <- function(x, title) {
d <- tibble(residuals = x$residuals)
ggplot(data = d, mapping = aes(x = residuals)) +
geom_density()
}
# Filter the data
gsb_data_filtered <-
gsb_data %>%
filter(!f_condition == "HEAD")
# Fit the models
length_models <- tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
separate(formula, into = c("dep_var", "exp_var"), sep = "~", remove = F) %>%
mutate(model = map(.x = formula, .f = foo, data = gsb_data_filtered),
res_plot = map2(.x = model, .y = model_name, .f = res_plot))
length_models$res_plot
# Function to plot the residuals
res_plot <- function(x, title) {
d <- tibble(residuals = x$residuals)
ggplot(data = d, mapping = aes(x = residuals)) +
geom_density() +
ggtitle(title)
}
# Fit the models
length_models <- tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
separate(formula, into = c("dep_var", "exp_var"), sep = "~", remove = F) %>%
mutate(model = map(.x = formula, .f = foo, data = gsb_data_filtered),
res_plot = map2(.x = model, .y = model_name, .f = res_plot))
length_models$res_plot
length_models$dep_var
# Fit the models
length_models <- tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
separate(formula, into = c("dep_var", "exp_var"), sep = "~", remove = F) %>%
mutate(model = map(.x = formula, .f = fit_model, data = gsb_data_filtered),
res_plot = map2(.x = model, .y = model_name, .f = res_plot),
dep_var = str_trim(dep_var))
lm(as.formula(x), data = data)
# Function to fit the model
fit_model <- function(x, data) {
lm(as.formula(x), data = data)
}
# Fit the models
length_models <- tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
separate(formula, into = c("dep_var", "exp_var"), sep = "~", remove = F) %>%
mutate(model = map(.x = formula, .f = fit_model, data = gsb_data_filtered),
res_plot = map2(.x = model, .y = model_name, .f = res_plot),
dep_var = str_trim(dep_var))
length_models$dep_var
# Fit the models
length_models <- tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
separate(formula, into = c("dep_var", "exp_var"), sep = "~", remove = F) %>%
mutate(model = map(.x = formula, .f = fit_model, data = gsb_data_filtered),
res_plot = map2(.x = model, .y = model_name, .f = res_plot),
dep_var = str_trim(dep_var),
dep_Var = str_remove_all(dep_var, "f_"))
length_models$dep_var
# Fit the models
length_models <- tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
separate(formula, into = c("dep_var", "exp_var"), sep = "~", remove = F) %>%
mutate(model = map(.x = formula, .f = fit_model, data = gsb_data_filtered),
res_plot = map2(.x = model, .y = model_name, .f = res_plot),
dep_var = str_trim(dep_var),
dep_var = str_remove_all(dep_var, "f_"))
length_models$dep_var
stargazer(length_models$model,
single.row = T,
dep.var.labels.include = T,
dep.var.labels = length_models$dep_var,
type = "html",
out = "test.html")
stargazer(length_models$model,
single.row = T,
dep.var.labels.include = T,
dep.var.labels = length_models$dep_var,
type = "html",
out = "test.html")
summary(length_models$model)
summary(length_models$model[[]])
summary(length_models$model[])
stargazer(length_models$model[],
single.row = T,
dep.var.labels.include = T,
dep.var.labels = length_models$dep_var,
type = "html",
out = "test.html")
stargazer(length_models$model[],
single.row = T,
dep.var.labels.include = T,
dep.var.labels =c("A", "B", "C"),
type = "html",
out = "test.html")
length_models$model[[1]]
a <- length_models$model[[1]]
a
# Function to fit the model
fit_model <- function(x, data) {
f <- as.formula(x)
lm(formula = f, data = data)
}
# Fit the models
length_models <- tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
separate(formula, into = c("dep_var", "exp_var"), sep = "~", remove = F) %>%
mutate(model = map(.x = formula, .f = fit_model, data = gsb_data_filtered),
res_plot = map2(.x = model, .y = model_name, .f = res_plot),
dep_var = str_trim(dep_var),
dep_var = str_remove_all(dep_var, "f_"))
a <- length_models$model[[1]]
a
# Fit the models
length_models <- tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
mutate(formula2 = list(as.formula(formula)))
length_models
# Fit the models
length_models <- tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
mutate(formula2 = list(as.formula(formula))) %>%
separate(formula, into = c("dep_var", "exp_var"), sep = "~", remove = F) %>%
mutate(model = map(.x = formula, .f = ~lm(., data = gapminder), data = gsb_data_filtered),
res_plot = map2(.x = model, .y = model_name, .f = res_plot),
dep_var = str_trim(dep_var),
dep_var = str_remove_all(dep_var, "f_"))
# Fit the models
length_models <- tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
mutate(formula2 = list(as.formula(formula))) %>%
separate(formula, into = c("dep_var", "exp_var"), sep = "~", remove = F) %>%
mutate(model = map(.x = formula, .f = ~lm(., data = data), data = gsb_data_filtered),
res_plot = map2(.x = model, .y = model_name, .f = res_plot),
dep_var = str_trim(dep_var),
dep_var = str_remove_all(dep_var, "f_"))
# Fit the models
length_models <- tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
mutate(formula2 = list(as.formula(formula))) %>%
separate(formula, into = c("dep_var", "exp_var"), sep = "~", remove = F) %>%
mutate(model = map(.x = formula2, .f = ~lm(., data = data), data = gsb_data_filtered),
res_plot = map2(.x = model, .y = model_name, .f = res_plot),
dep_var = str_trim(dep_var),
dep_var = str_remove_all(dep_var, "f_"))
# Fit the models
length_models <- tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
mutate(formula2 = lmap(formula, as.formula)) %>%
separate(formula, into = c("dep_var", "exp_var"), sep = "~", remove = F) %>%
mutate(model = map(.x = formula2, .f = ~lm(., data = data), data = gsb_data_filtered),
res_plot = map2(.x = model, .y = model_name, .f = res_plot),
dep_var = str_trim(dep_var),
dep_var = str_remove_all(dep_var, "f_"))
length_models <- tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
mutate(formula2 = lmap(formula, as.formula)) %>%
separate(formula, into = c("dep_var", "exp_var"), sep = "~", remove = F)
length_models <- tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
mutate(formula2 = lmap(formula, as.formula))
length_models <- tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
mutate(formula2 = map(formula, as.formula))
length_models <- tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
mutate(formula2 = map(formula, as.formula)) %>%
separate(formula, into = c("dep_var", "exp_var"), sep = "~", remove = F)
# Fit the models
length_models <- tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
mutate(formula2 = map(formula, as.formula)) %>%
separate(formula, into = c("dep_var", "exp_var"), sep = "~", remove = F) %>%
mutate(model = map(.x = formula2, .f = ~lm(., data = data), data = gsb_data_filtered),
res_plot = map2(.x = model, .y = model_name, .f = res_plot),
dep_var = str_trim(dep_var),
dep_var = str_remove_all(dep_var, "f_"))
# Fit the models
length_models <- tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
mutate(formula2 = map(formula, as.formula)) %>%
separate(formula, into = c("dep_var", "exp_var"), sep = "~", remove = F) %>%
mutate(model = map(formula2, ~lm(., data = data), data = gsb_data_filtered),
res_plot = map2(.x = model, .y = model_name, .f = res_plot),
dep_var = str_trim(dep_var),
dep_var = str_remove_all(dep_var, "f_"))
# Fit the models
length_models <- tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
mutate(formula2 = map(formula, as.formula)) %>%
separate(formula, into = c("dep_var", "exp_var"), sep = "~", remove = F) %>%
mutate(model = map(formula2, ~lm(., data = data), data = gsb_data_filtered)),
# Fit the models
length_models <- tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
mutate(formula2 = map(formula, as.formula)) %>%
separate(formula, into = c("dep_var", "exp_var"), sep = "~", remove = F) %>%
mutate(model = map(formula2, ~lm(., data = data), data = gsb_data_filtered))
tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
mutate(formula2 = map(formula, as.formula)) %>%
separate(formula, into = c("dep_var", "exp_var"), sep = "~", remove = F)
# Fit the models
length_models <- tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
mutate(formula2 = map(formula, as.formula)) %>%
separate(formula, into = c("dep_var", "exp_var"), sep = "~", remove = F) %>%
mutate(model = map(formula2, ~lm(., data = gsb_data_filtered), gsb_data_filtered = gsb_data_filtered))
# Fit the models
length_models <- tibble(model_name = c("SL2TL",
"HL2SL",
"HL2TL",
"SL2TW",
"TL2TW",
"HL2TW"),
formula = c("f_tl ~ f_sl",
"f_sl ~ f_hl",
"f_tl ~ f_hl",
"log10(f_w) ~ log10(f_sl)",
"log10(f_w) ~ log10(f_tl)",
"log10(f_w) ~ log10(f_hl)")) %>%
mutate(formula2 = map(formula, as.formula)) %>%
separate(formula, into = c("dep_var", "exp_var"), sep = "~", remove = F) %>%
mutate(model = map(formula2, ~lm(., data = gsb_data_filtered), gsb_data_filtered = gsb_data_filtered),
res_plot = map2(.x = model, .y = model_name, .f = res_plot),
dep_var = str_trim(dep_var),
dep_var = str_remove_all(dep_var, "f_"))
stargazer(length_models$model,
single.row = T,
dep.var.labels.include = T,
dep.var.labels =c("A", "B", "C"),
type = "html",
out = "test.html")
stargazer(length_models$model,
single.row = T,
dep.var.labels.include = T,
dep.var.labels = length_models$dep_var,
type = "html",
out = "test.html")
